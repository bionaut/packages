{"version":3,"file":"modal-hub.stories-750772d5.js","sources":["../../../../packages/modal-hub/src/lib/modal-hub-context.tsx"],"sourcesContent":["import React, {\n  FC,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\n\nimport {\n  ModalHubActions,\n  ModalHubContextValue,\n  ModalHubState,\n  UseModalHub,\n} from './modal-hub-types'\n\nexport const modalHubContext = React.createContext<ModalHubContextValue>([] as any)\n\nconst Empty: FC = () => {\n  return null\n}\n\nexport const ModalHubProvider: FC<PropsWithChildren<unknown>> = ({ children }) => {\n  const [state, updateState] = useState<ModalHubState>({})\n  const { active } = state\n\n  const renderModal = (modalComponent: ReactElement) => {\n    updateState(() => {\n      return {\n        active: modalComponent,\n      }\n    })\n  }\n\n  const removeModal = () => {\n    updateState(() => {\n      return {\n        active: undefined,\n      }\n    })\n  }\n\n  const actions: ModalHubActions = {\n    renderModal,\n    removeModal,\n  }\n\n  const component = active || <Empty />\n\n  return (\n    <modalHubContext.Provider value={[state, actions]}>\n      <>\n        {children}\n        {component}\n      </>\n    </modalHubContext.Provider>\n  )\n}\n\nexport const useModalHub: UseModalHub = (modal, props) => {\n  const [isOpen, setOpen] = useState(false)\n  const [, { removeModal, renderModal }] = useContext(modalHubContext)\n\n  const Component = modal\n\n  const close = useCallback(() => {\n    setOpen(false)\n    removeModal()\n  }, [removeModal])\n\n  const open = useCallback(() => {\n    setOpen(true)\n    renderModal(<Component {...(props || ({} as any))} onClose={close} />)\n  }, [Component, close, props, renderModal])\n\n  const openWithProps = useCallback(\n    (overrideProps?: Partial<typeof props>) => {\n      setOpen(true)\n      renderModal(<Component {...({ ...props, ...overrideProps } as any)} onClose={close} />)\n    },\n    [Component, close, props, renderModal],\n  )\n\n  return {\n    isOpen,\n    close,\n    open,\n    openWithProps,\n  }\n}\n"],"names":["modalHubContext","React","Empty","ModalHubProvider","children","state","updateState","useState","active","actions","modalComponent","component","jsx","jsxs","Fragment","useModalHub","modal","props","isOpen","setOpen","removeModal","renderModal","useContext","Component","close","useCallback","open","openWithProps","overrideProps"],"mappings":"2GAgBO,MAAAA,EAAAC,EAAA,cAAA,CAAA,CAAA,EAEPC,EAAA,IACE,KAGKC,EAAA,CAAA,CAAA,SAAAC,KAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EACA,CAAA,OAAAC,CAAA,EAAAH,EAkBAI,EAAA,CAAiC,YAhBjCC,GAAA,CACEJ,EAAA,KACE,CAAO,OAAAI,CACG,EACV,CACD,EAYD,YATF,IAAA,CACEJ,EAAA,KACE,CAAO,OAAA,MACG,EACV,CACD,CAKD,EAGFK,EAAAH,GAAAI,EAAAV,EAAA,CAAA,CAAA,EAEA,OAAAU,EAAAZ,EAAA,SAAA,CAAA,MAAA,CAAAK,EAAAI,CAAA,EAAA,SAAAI,EAAAC,EAAA,CAAA,SAAA,CAGOV,EAAAO,CACA,CAAA,CAAA,CAAA,CAAA,CAIT,EAEOI,EAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAZ,EAAA,SAAA,EAAA,EACA,CAAA,CAAA,CAAA,YAAAa,EAAA,YAAAC,CAAA,CAAA,EAAAC,EAAAA,WAAAtB,CAAA,EAEAuB,EAAAP,EAEAQ,EAAAC,EAAAA,YAAA,IAAA,CACEN,EAAA,EAAA,EACAC,GAAY,EAAA,CAAAA,CAAA,CAAA,EAGdM,EAAAD,EAAAA,YAAA,IAAA,CACEN,EAAA,EAAA,EACAE,EAAAT,EAAAW,EAAA,CAAA,GAAAN,GAAA,CAAA,EAAA,QAAAO,CAAA,CAAA,CAAA,CAAqE,EAAA,CAAAD,EAAAC,EAAAP,EAAAI,CAAA,CAAA,EAGvEM,EAAAF,EAAA,YAAsBG,GAAA,CAElBT,EAAA,EAAA,EACAE,EAAAT,EAAAW,EAAA,CAAA,GAAAN,EAAA,GAAAW,EAAA,QAAAJ,CAAA,CAAA,CAAA,CAAsF,EACxF,CAAAD,EAAAC,EAAAP,EAAAI,CAAA,CACqC,EAGvC,MAAA,CAAO,OAAAH,EACL,MAAAM,EACA,KAAAE,EACA,cAAAC,CACA,CAEJ;;;;;;;"}